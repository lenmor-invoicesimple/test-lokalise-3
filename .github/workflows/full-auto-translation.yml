name: Full Auto-Translation Workflow

on:
  workflow_dispatch:  # Manual trigger (no inputs needed)
  push:
    branches:
      - main  # Auto-trigger when pushing to main
    paths:
      - 'src/locales/en*.json'  # Only when English source files change
  pull_request:
    types: [closed]
    branches:
      - main  # Auto-trigger when PR is merged to main
    paths:
      - 'src/locales/en*.json'

jobs:
  translate-and-pull:
    runs-on: ubuntu-latest
    # Only run if it's a push to main OR a merged PR (not just closed)
    if: github.ref == 'refs/heads/main' || (github.event.pull_request.merged == true)
    
    env:
      TARGET_LANGUAGES: "es,fr"  # Spanish and French
      WAIT_TIME_SECONDS: "30"     # 30 seconds wait time
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Step 1 - Push source files to Lokalise
        run: |
          echo "=== Pushing latest source files to Lokalise ==="
          
          # Install Lokalise CLI
          curl -sSL https://raw.githubusercontent.com/lokalise/lokalise-cli-2-go/master/install.sh | sh
          
          # Check if English source file exists
          if [ -f "src/locales/en.json" ]; then
            echo "Found en.json, uploading to Lokalise..."
            
            ./bin/lokalise2 file upload \
              --token ${{ secrets.LOKALISE_API_TOKEN }} \
              --project-id ${{ secrets.LOKALISE_PROJECT_ID }} \
              --file "src/locales/en.json" \
              --lang-iso en \
              --replace-modified \
              --include-path \
              --distinguish-by-file \
              --use-automations
            
            echo "✅ English source file uploaded to Lokalise"
          else
            echo "⚠️ No en.json found in src/locales/"
          fi

      - name: Step 2 - Wait for Lokalise automation to complete
        run: |
          echo "=== Waiting $WAIT_TIME_SECONDS seconds for Lokalise automation ==="
          sleep $((WAIT_TIME_SECONDS))

      - name: Step 3 - Verify translations were created
        run: |
          echo "=== Checking translation progress ==="
          
          IFS=',' read -ra LANGS <<< "$TARGET_LANGUAGES"
          
          for lang in "${LANGS[@]}"; do
            echo "Checking $lang translations:"
            
            # Count total vs translated (including fuzzy)
            total=$(curl -s -X GET \
              "https://api.lokalise.com/api2/projects/${{ secrets.LOKALISE_PROJECT_ID }}/translations?filter_lang_iso=$lang&limit=1000" \
              -H "X-Api-Token: ${{ secrets.LOKALISE_API_TOKEN }}" | \
              jq -r '.translations | length')
            
            translated=$(curl -s -X GET \
              "https://api.lokalise.com/api2/projects/${{ secrets.LOKALISE_PROJECT_ID }}/translations?filter_lang_iso=$lang&filter_is_fuzzy=false&limit=1000" \
              -H "X-Api-Token: ${{ secrets.LOKALISE_API_TOKEN }}" | \
              jq -r '.translations | length')
            
            # Also count fuzzy translations (auto-translated)
            fuzzy=$(curl -s -X GET \
              "https://api.lokalise.com/api2/projects/${{ secrets.LOKALISE_PROJECT_ID }}/translations?filter_lang_iso=$lang&filter_is_fuzzy=true&limit=1000" \
              -H "X-Api-Token: ${{ secrets.LOKALISE_API_TOKEN }}" | \
              jq -r '.translations | length')
            
            echo "$lang: $translated non-fuzzy + $fuzzy fuzzy = $total total translations"
            
            # Show most recent translations (sorted by modification date)
            echo "Most recent translations for $lang:"
            curl -s -X GET \
              "https://api.lokalise.com/api2/projects/${{ secrets.LOKALISE_PROJECT_ID }}/translations?filter_lang_iso=$lang&limit=5" \
              -H "X-Api-Token: ${{ secrets.LOKALISE_API_TOKEN }}" | \
              jq -r '.translations | sort_by(.modified_at) | reverse | .[:5][] | "- Key: \(.key.key_name.other) | Text: \(.translation) | Modified: \(.modified_at) | Fuzzy: \(.is_fuzzy)"'
            
            echo ""
            
            # Show specifically auto-translated (fuzzy) items from today
            echo "Recent auto-translations (fuzzy) for $lang:"
            today=$(date -u +"%Y-%m-%d")
            curl -s -X GET \
              "https://api.lokalise.com/api2/projects/${{ secrets.LOKALISE_PROJECT_ID }}/translations?filter_lang_iso=$lang&filter_is_fuzzy=true&limit=10" \
              -H "X-Api-Token: ${{ secrets.LOKALISE_API_TOKEN }}" | \
              jq -r --arg today "$today" '.translations | map(select(.modified_at | startswith($today))) | sort_by(.modified_at) | reverse | .[] | "- \(.key.key_name.other): \(.translation) (at \(.modified_at))"'
            
            echo "---"
          done

      - name: Step 4 - Debug file structure before pull
        run: |
          echo "=== Current file structure ==="
          ls -la src/locales/ || echo "src/locales directory doesn't exist"
          echo ""
          echo "=== Testing Lokalise CLI download manually ==="
          curl -sSL https://raw.githubusercontent.com/lokalise/lokalise-cli-2-go/master/install.sh | sh
          ./bin/lokalise2 file download \
            --token ${{ secrets.LOKALISE_API_TOKEN }} \
            --project-id ${{ secrets.LOKALISE_PROJECT_ID }} \
            --format json \
            --unzip-to ./test-download \
            --include-description=false \
            --export-empty-as=skip \
            --indentation=4sp
          
          echo "=== Downloaded files ==="
          find ./test-download -name "*.json" -exec echo "File: {}" \; -exec head -3 {} \;

      - name: Step 5 - Pull translations back to GitHub
        uses: lokalise/lokalise-pull-action@v3.9.0
        with:
          api_token: ${{ secrets.LOKALISE_API_TOKEN }}
          project_id: ${{ secrets.LOKALISE_PROJECT_ID }}
          translations_path: src/locales
          base_lang: en
          file_format: json
          flat_naming: true
          skip_include_tags: true
          always_pull_base: false
          additional_params: '{"indentation": "4sp", "export_empty_as": "skip", "original_filenames": true}'

      - name: Step 6 - Check what changed after pull
        run: |
          echo "=== Files after pull ==="
          ls -la src/locales/
          echo ""
          echo "=== Git status after pull ==="
          git status
          echo ""
          echo "=== Git diff after pull ==="
          git diff --name-only || echo "No differences found"
          git diff src/locales/ || echo "No changes in src/locales/"

      - name: Step 7 - Summary
        run: |
          echo "=== Workflow Complete ==="
          echo "✅ Target languages added to Lokalise"
          echo "✅ Automation triggered for untranslated keys"
          echo "✅ Waited for translations to complete"
          echo "✅ Pulled translations back to GitHub"
          echo ""
          echo "If a PR was created, review and merge it to get translations in your main branch."
          echo "If no PR was created, either no new translations were found or automation didn't complete."
